// Code generated by protoc-gen-go.
// source: protos/golang.conradwood.net/apis/goproxy/goproxy.proto
// DO NOT EDIT!

/*
Package goproxy is a generated protocol buffer package.

It is generated from these files:
	protos/golang.conradwood.net/apis/goproxy/goproxy.proto

It has these top-level messages:
	CachedModule
	ModuleInfoRequest
	ModuleInfo
	VersionInfo
	GetPathRequest
	BinData
*/
package goproxy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "golang.conradwood.net/apis/common"
import h2gproxy "golang.conradwood.net/apis/h2gproxy"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MODULETYPE int32

const (
	MODULETYPE_UNKNOWN        MODULETYPE = 0
	MODULETYPE_PROTO          MODULETYPE = 2
	MODULETYPE_LOCALMODULE    MODULETYPE = 3
	MODULETYPE_EXTERNALMODULE MODULETYPE = 4
)

var MODULETYPE_name = map[int32]string{
	0: "UNKNOWN",
	2: "PROTO",
	3: "LOCALMODULE",
	4: "EXTERNALMODULE",
}
var MODULETYPE_value = map[string]int32{
	"UNKNOWN":        0,
	"PROTO":          2,
	"LOCALMODULE":    3,
	"EXTERNALMODULE": 4,
}

func (x MODULETYPE) String() string {
	return proto.EnumName(MODULETYPE_name, int32(x))
}
func (MODULETYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CachedModule struct {
	ID       uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Path     string `protobuf:"bytes,2,opt,name=Path" json:"Path,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=Version" json:"Version,omitempty"`
	Suffix   string `protobuf:"bytes,4,opt,name=Suffix" json:"Suffix,omitempty"`
	Key      string `protobuf:"bytes,5,opt,name=Key" json:"Key,omitempty"`
	Created  uint32 `protobuf:"varint,6,opt,name=Created" json:"Created,omitempty"`
	LastUsed uint32 `protobuf:"varint,7,opt,name=LastUsed" json:"LastUsed,omitempty"`
}

func (m *CachedModule) Reset()                    { *m = CachedModule{} }
func (m *CachedModule) String() string            { return proto.CompactTextString(m) }
func (*CachedModule) ProtoMessage()               {}
func (*CachedModule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CachedModule) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *CachedModule) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CachedModule) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CachedModule) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

func (m *CachedModule) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CachedModule) GetCreated() uint32 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *CachedModule) GetLastUsed() uint32 {
	if m != nil {
		return m.LastUsed
	}
	return 0
}

type ModuleInfoRequest struct {
	URL string `protobuf:"bytes,1,opt,name=URL" json:"URL,omitempty"`
}

func (m *ModuleInfoRequest) Reset()                    { *m = ModuleInfoRequest{} }
func (m *ModuleInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*ModuleInfoRequest) ProtoMessage()               {}
func (*ModuleInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ModuleInfoRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type ModuleInfo struct {
	ModuleType MODULETYPE `protobuf:"varint,1,opt,name=ModuleType,enum=goproxy.MODULETYPE" json:"ModuleType,omitempty"`
	Exists     bool       `protobuf:"varint,2,opt,name=Exists" json:"Exists,omitempty"`
}

func (m *ModuleInfo) Reset()                    { *m = ModuleInfo{} }
func (m *ModuleInfo) String() string            { return proto.CompactTextString(m) }
func (*ModuleInfo) ProtoMessage()               {}
func (*ModuleInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ModuleInfo) GetModuleType() MODULETYPE {
	if m != nil {
		return m.ModuleType
	}
	return MODULETYPE_UNKNOWN
}

func (m *ModuleInfo) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type VersionInfo struct {
	Version     uint64 `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	BuildTime   uint32 `protobuf:"varint,2,opt,name=BuildTime" json:"BuildTime,omitempty"`
	VersionName string `protobuf:"bytes,3,opt,name=VersionName" json:"VersionName,omitempty"`
}

func (m *VersionInfo) Reset()                    { *m = VersionInfo{} }
func (m *VersionInfo) String() string            { return proto.CompactTextString(m) }
func (*VersionInfo) ProtoMessage()               {}
func (*VersionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *VersionInfo) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *VersionInfo) GetBuildTime() uint32 {
	if m != nil {
		return m.BuildTime
	}
	return 0
}

func (m *VersionInfo) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

type GetPathRequest struct {
	Path string `protobuf:"bytes,1,opt,name=Path" json:"Path,omitempty"`
}

func (m *GetPathRequest) Reset()                    { *m = GetPathRequest{} }
func (m *GetPathRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPathRequest) ProtoMessage()               {}
func (*GetPathRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetPathRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type BinData struct {
	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *BinData) Reset()                    { *m = BinData{} }
func (m *BinData) String() string            { return proto.CompactTextString(m) }
func (*BinData) ProtoMessage()               {}
func (*BinData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *BinData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CachedModule)(nil), "goproxy.CachedModule")
	proto.RegisterType((*ModuleInfoRequest)(nil), "goproxy.ModuleInfoRequest")
	proto.RegisterType((*ModuleInfo)(nil), "goproxy.ModuleInfo")
	proto.RegisterType((*VersionInfo)(nil), "goproxy.VersionInfo")
	proto.RegisterType((*GetPathRequest)(nil), "goproxy.GetPathRequest")
	proto.RegisterType((*BinData)(nil), "goproxy.BinData")
	proto.RegisterEnum("goproxy.MODULETYPE", MODULETYPE_name, MODULETYPE_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoProxy service

type GoProxyClient interface {
	// h2gproxy endpoint
	StreamHTTP(ctx context.Context, in *h2gproxy.StreamRequest, opts ...grpc.CallOption) (GoProxy_StreamHTTPClient, error)
	AnalyseURL(ctx context.Context, in *ModuleInfoRequest, opts ...grpc.CallOption) (*ModuleInfo, error)
	// given a path, will download response
	GetPath(ctx context.Context, in *GetPathRequest, opts ...grpc.CallOption) (GoProxy_GetPathClient, error)
}

type goProxyClient struct {
	cc *grpc.ClientConn
}

func NewGoProxyClient(cc *grpc.ClientConn) GoProxyClient {
	return &goProxyClient{cc}
}

func (c *goProxyClient) StreamHTTP(ctx context.Context, in *h2gproxy.StreamRequest, opts ...grpc.CallOption) (GoProxy_StreamHTTPClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GoProxy_serviceDesc.Streams[0], c.cc, "/goproxy.GoProxy/StreamHTTP", opts...)
	if err != nil {
		return nil, err
	}
	x := &goProxyStreamHTTPClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GoProxy_StreamHTTPClient interface {
	Recv() (*h2gproxy.StreamDataResponse, error)
	grpc.ClientStream
}

type goProxyStreamHTTPClient struct {
	grpc.ClientStream
}

func (x *goProxyStreamHTTPClient) Recv() (*h2gproxy.StreamDataResponse, error) {
	m := new(h2gproxy.StreamDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *goProxyClient) AnalyseURL(ctx context.Context, in *ModuleInfoRequest, opts ...grpc.CallOption) (*ModuleInfo, error) {
	out := new(ModuleInfo)
	err := grpc.Invoke(ctx, "/goproxy.GoProxy/AnalyseURL", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goProxyClient) GetPath(ctx context.Context, in *GetPathRequest, opts ...grpc.CallOption) (GoProxy_GetPathClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GoProxy_serviceDesc.Streams[1], c.cc, "/goproxy.GoProxy/GetPath", opts...)
	if err != nil {
		return nil, err
	}
	x := &goProxyGetPathClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GoProxy_GetPathClient interface {
	Recv() (*BinData, error)
	grpc.ClientStream
}

type goProxyGetPathClient struct {
	grpc.ClientStream
}

func (x *goProxyGetPathClient) Recv() (*BinData, error) {
	m := new(BinData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for GoProxy service

type GoProxyServer interface {
	// h2gproxy endpoint
	StreamHTTP(*h2gproxy.StreamRequest, GoProxy_StreamHTTPServer) error
	AnalyseURL(context.Context, *ModuleInfoRequest) (*ModuleInfo, error)
	// given a path, will download response
	GetPath(*GetPathRequest, GoProxy_GetPathServer) error
}

func RegisterGoProxyServer(s *grpc.Server, srv GoProxyServer) {
	s.RegisterService(&_GoProxy_serviceDesc, srv)
}

func _GoProxy_StreamHTTP_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(h2gproxy.StreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GoProxyServer).StreamHTTP(m, &goProxyStreamHTTPServer{stream})
}

type GoProxy_StreamHTTPServer interface {
	Send(*h2gproxy.StreamDataResponse) error
	grpc.ServerStream
}

type goProxyStreamHTTPServer struct {
	grpc.ServerStream
}

func (x *goProxyStreamHTTPServer) Send(m *h2gproxy.StreamDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GoProxy_AnalyseURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModuleInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoProxyServer).AnalyseURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goproxy.GoProxy/AnalyseURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoProxyServer).AnalyseURL(ctx, req.(*ModuleInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoProxy_GetPath_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetPathRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GoProxyServer).GetPath(m, &goProxyGetPathServer{stream})
}

type GoProxy_GetPathServer interface {
	Send(*BinData) error
	grpc.ServerStream
}

type goProxyGetPathServer struct {
	grpc.ServerStream
}

func (x *goProxyGetPathServer) Send(m *BinData) error {
	return x.ServerStream.SendMsg(m)
}

var _GoProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goproxy.GoProxy",
	HandlerType: (*GoProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AnalyseURL",
			Handler:    _GoProxy_AnalyseURL_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamHTTP",
			Handler:       _GoProxy_StreamHTTP_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetPath",
			Handler:       _GoProxy_GetPath_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/golang.conradwood.net/apis/goproxy/goproxy.proto",
}

func init() {
	proto.RegisterFile("protos/golang.conradwood.net/apis/goproxy/goproxy.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x53, 0xdd, 0x6e, 0xda, 0x4c,
	0x10, 0xfd, 0x0c, 0x04, 0x87, 0x21, 0xe1, 0xa3, 0x13, 0xa9, 0xb1, 0xdc, 0x44, 0x42, 0x56, 0x2b,
	0xa1, 0x5e, 0x38, 0x11, 0x91, 0xda, 0xab, 0x5e, 0x04, 0xb0, 0x52, 0x14, 0x07, 0xd0, 0xc6, 0xb4,
	0xcd, 0xe5, 0x16, 0x2f, 0x60, 0x09, 0xbc, 0xd4, 0xbb, 0xa8, 0xf0, 0x4e, 0x7d, 0x8f, 0xbe, 0x56,
	0xb5, 0xeb, 0x1f, 0x68, 0x54, 0xe5, 0x6a, 0xe7, 0xcc, 0x99, 0x19, 0xcf, 0x9c, 0xf1, 0xc0, 0xc7,
	0x75, 0xc2, 0x25, 0x17, 0x57, 0x73, 0xbe, 0xa4, 0xf1, 0xdc, 0x9d, 0xf2, 0x38, 0xa1, 0xe1, 0x4f,
	0xce, 0x43, 0x37, 0x66, 0xf2, 0x8a, 0xae, 0x23, 0x45, 0xad, 0x13, 0xbe, 0xdd, 0xe5, 0xaf, 0xab,
	0x33, 0xd0, 0xcc, 0xa0, 0xed, 0xbe, 0x90, 0x3a, 0xe5, 0xab, 0x15, 0x8f, 0xb3, 0x27, 0x4d, 0xb4,
	0x3b, 0x2f, 0xc4, 0x2f, 0x3a, 0xf3, 0xf4, 0x5b, 0xb9, 0x91, 0xe6, 0x38, 0xbf, 0x0c, 0x38, 0xe9,
	0xd1, 0xe9, 0x82, 0x85, 0x0f, 0x3c, 0xdc, 0x2c, 0x19, 0x36, 0xa0, 0x34, 0xe8, 0x5b, 0x46, 0xcb,
	0x68, 0x57, 0x48, 0x69, 0xd0, 0x47, 0x84, 0xca, 0x98, 0xca, 0x85, 0x55, 0x6a, 0x19, 0xed, 0x1a,
	0xd1, 0x36, 0x5a, 0x60, 0x7e, 0x61, 0x89, 0x88, 0x78, 0x6c, 0x95, 0xb5, 0x3b, 0x87, 0xf8, 0x1a,
	0xaa, 0x8f, 0x9b, 0xd9, 0x2c, 0xda, 0x5a, 0x15, 0x4d, 0x64, 0x08, 0x9b, 0x50, 0xbe, 0x67, 0x3b,
	0xeb, 0x48, 0x3b, 0x95, 0xa9, 0x6a, 0xf4, 0x12, 0x46, 0x25, 0x0b, 0xad, 0x6a, 0xcb, 0x68, 0x9f,
	0x92, 0x1c, 0xa2, 0x0d, 0xc7, 0x3e, 0x15, 0x72, 0x22, 0x58, 0x68, 0x99, 0x9a, 0x2a, 0xb0, 0xf3,
	0x0e, 0x5e, 0xa5, 0x7d, 0x0e, 0xe2, 0x19, 0x27, 0xec, 0xc7, 0x86, 0x09, 0xa9, 0x8a, 0x4f, 0x88,
	0xaf, 0x7b, 0xae, 0x11, 0x65, 0x3a, 0x4f, 0x00, 0xfb, 0x30, 0xbc, 0xc9, 0x51, 0xb0, 0x5b, 0x33,
	0x1d, 0xd6, 0xe8, 0x9c, 0xb9, 0xb9, 0xe8, 0x0f, 0xa3, 0xfe, 0xc4, 0xf7, 0x82, 0xa7, 0xb1, 0x47,
	0x0e, 0xc2, 0xd4, 0x24, 0xde, 0x36, 0x12, 0x52, 0xe8, 0xc9, 0x8f, 0x49, 0x86, 0x9c, 0x39, 0xd4,
	0xb3, 0x61, 0x75, 0xed, 0x03, 0x29, 0x52, 0xcd, 0x0a, 0x29, 0x2e, 0xa0, 0xd6, 0xdd, 0x44, 0xcb,
	0x30, 0x88, 0x56, 0x4c, 0xd7, 0x38, 0x25, 0x7b, 0x07, 0xb6, 0x8a, 0x32, 0x43, 0xba, 0x62, 0x99,
	0x8c, 0x87, 0x2e, 0xe7, 0x2d, 0x34, 0xee, 0x98, 0x54, 0x7a, 0xe7, 0x73, 0xe6, 0xab, 0x30, 0xf6,
	0xab, 0x70, 0x2e, 0xc1, 0xec, 0x46, 0x71, 0x9f, 0x4a, 0xaa, 0x68, 0xf5, 0x6a, 0xfa, 0x84, 0x68,
	0xfb, 0xfd, 0x00, 0x60, 0x3f, 0x1f, 0xd6, 0xc1, 0x9c, 0x0c, 0xef, 0x87, 0xa3, 0xaf, 0xc3, 0xe6,
	0x7f, 0x58, 0x83, 0xa3, 0x31, 0x19, 0x05, 0xa3, 0x66, 0x09, 0xff, 0x87, 0xba, 0x3f, 0xea, 0xdd,
	0xfa, 0x69, 0x68, 0xb3, 0x8c, 0x08, 0x0d, 0xef, 0x5b, 0xe0, 0x91, 0x61, 0xe1, 0xab, 0x74, 0x7e,
	0x1b, 0x60, 0xde, 0xf1, 0xb1, 0xd2, 0x0c, 0x3d, 0x80, 0x47, 0x99, 0x30, 0xba, 0xfa, 0x1c, 0x04,
	0x63, 0x3c, 0x77, 0x8b, 0x9f, 0x2a, 0xf5, 0x66, 0x0d, 0xdb, 0x17, 0xcf, 0x09, 0xd5, 0x13, 0x61,
	0x62, 0xcd, 0x63, 0xc1, 0xae, 0x0d, 0xfc, 0x04, 0x70, 0x1b, 0xd3, 0xe5, 0x4e, 0xb0, 0x09, 0xf1,
	0xd1, 0xde, 0xaf, 0xe4, 0xf9, 0x8a, 0xed, 0xb3, 0x7f, 0x70, 0xf8, 0x01, 0xcc, 0x4c, 0x21, 0x3c,
	0x2f, 0xf8, 0xbf, 0x35, 0xb3, 0x9b, 0x05, 0x91, 0xc9, 0x74, 0x6d, 0x74, 0x2f, 0xe1, 0x4d, 0xcc,
	0xe4, 0xe1, 0x99, 0xa8, 0x13, 0xc9, 0x03, 0xbf, 0x57, 0xf5, 0x65, 0xdc, 0xfc, 0x09, 0x00, 0x00,
	0xff, 0xff, 0xf1, 0xd8, 0x93, 0x4e, 0xc1, 0x03, 0x00, 0x00,
}
